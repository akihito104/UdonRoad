plugins {
//    id "me.tatarka.retrolambda" version "3.5.0"
    id 'com.github.ben-manes.versions' version '0.15.0'
}
apply plugin: 'com.android.application'
apply plugin: 'realm-android'
apply plugin: 'com.cookpad.android.licensetools'

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.1'

    defaultConfig {
        applicationId "com.freshdigitable.udonroad"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "com.freshdigitable.udonroad.MockTestRunner"
    }
    buildTypes {
        debug {
            debuggable true
// https://code.google.com/p/android/issues/detail?id=206259
//            shrinkResources true
            zipAlignEnabled true
        }
        release {
            debuggable false
            shrinkResources true
            zipAlignEnabled true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
    }

    dataBinding {
        enabled = true
    }

    lintOptions {
        abortOnError false
        textReport true
        textOutput 'stdout'
    }

    realm {
        syncEnabled false
    }
}

def supportLibVer = '26.0.1'
def t4jVer = '4.0.6'
def rxVer = '2.1.0'
def rxAndroidVer = '2.0.1'
def daggerVer = "2.11"
def supportTestVer = "0.6-alpha"
def espressoVer = "2.2.2"
def dexmakerVer = '2.2.0'
def leakcanaryVer= '1.5.1'
def okhttpVer = '3.8.1'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:$supportLibVer"
    implementation "com.android.support:recyclerview-v7:$supportLibVer"
    implementation "com.android.support:design:$supportLibVer"

    implementation "org.twitter4j:twitter4j-core:$t4jVer"
    implementation "org.twitter4j:twitter4j-stream:$t4jVer"
    implementation "org.twitter4j:twitter4j-http2-support:$t4jVer"
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation "com.squareup.okhttp3:okhttp:$okhttpVer"

    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVer"
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    implementation "io.reactivex.rxjava2:rxjava:$rxVer"

    implementation "com.google.dagger:dagger:$daggerVer"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVer"

    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanaryVer"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanaryVer"
    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanaryVer"

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-all:2.0.2-beta'
    androidTestImplementation "com.android.support:support-annotations:$supportLibVer"
    androidTestImplementation "com.android.support.test:runner:$supportTestVer"
    androidTestImplementation "com.android.support.test:rules:$supportTestVer"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVer"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$espressoVer"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$daggerVer"

    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:$dexmakerVer"
    androidTestImplementation 'junit:junit:4.12'
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$okhttpVer"
}

check.dependsOn(checkLicenses)

project.afterEvaluate {
    generateDebugAssets.dependsOn (generateLicensePage)
    generateReleaseAssets.dependsOn (generateLicensePage)
}
