apply plugin: 'com.android.application'
apply plugin: 'realm-android'
apply plugin: 'com.cookpad.android.licensetools'

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.0'

    defaultConfig {
        applicationId "com.freshdigitable.udonroad"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "com.freshdigitable.udonroad.MockTestRunner"
    }
    buildTypes {
        debug {
            debuggable true
// https://code.google.com/p/android/issues/detail?id=206259
//            shrinkResources true
            zipAlignEnabled true
        }
        release {
            debuggable false
            shrinkResources true
            zipAlignEnabled true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    configurations {
        // Resolved 'com.android.support:support-annotations' versions for app (xx.x.x) and test app (xx.x.x) differ.
        // Add this statement if 'com.android.support:support-annotations:x.x.x' dependencies was already defined in compile configuration.
        androidTestCompile.exclude group: 'com.android.support', module: 'support-annotations'
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
    }

    dataBinding {
        enabled = true
    }

    lintOptions {
        abortOnError false
        textReport true
        textOutput 'stdout'
    }

    realm {
        syncEnabled false
    }
}

def supportLibVer = '25.0.1'
def t4jVer = '4.0.5'
def rxVer = '1.1.6'
def rxAndroidVer = '1.2.1'
def daggerVer = "2.5"
def supportTestVer = "0.5"
def dexmakerVer = '1.4'
def leakcanaryVer= '1.4'

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:appcompat-v7:$supportLibVer"
    compile "com.android.support:recyclerview-v7:$supportLibVer"
    compile "com.android.support:design:$supportLibVer"

    compile "org.twitter4j:twitter4j-core:$t4jVer"
    compile "org.twitter4j:twitter4j-stream:$t4jVer"
    compile "org.twitter4j:twitter4j-http2-support:$t4jVer"
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.squareup.okhttp3:okhttp:3.4.1'

    compile "io.reactivex:rxandroid:$rxAndroidVer"
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    compile "io.reactivex:rxjava:$rxVer"

    compile "com.google.dagger:dagger:$daggerVer"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVer"

    debugCompile "com.squareup.leakcanary:leakcanary-android:$leakcanaryVer"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanaryVer"
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanaryVer"

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-all:1.10.19'
    testCompile 'org.robolectric:robolectric:3.1'
    androidTestCompile "com.android.support:support-annotations:$supportLibVer"
    androidTestCompile "com.android.support.test:runner:$supportTestVer"
    androidTestCompile "com.android.support.test:rules:$supportTestVer"
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$daggerVer"

    androidTestCompile "org.mockito:mockito-core:1.10.19"
    androidTestCompile "com.crittercism.dexmaker:dexmaker:$dexmakerVer"
    androidTestCompile "com.crittercism.dexmaker:dexmaker-dx:$dexmakerVer"
    androidTestCompile "com.crittercism.dexmaker:dexmaker-mockito:$dexmakerVer"
    androidTestCompile 'junit:junit:4.12'
}
